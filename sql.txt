-- Create the database
CREATE DATABASE IF NOT EXISTS electricity_bill_system;
USE electricity_bill_system;

-- Admin Table
CREATE TABLE Admin (
    admin_id INT PRIMARY KEY AUTO_INCREMENT,
    login_id VARCHAR(50) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL
);

-- Customer Table
CREATE TABLE Customer (
    cust_id INT PRIMARY KEY AUTO_INCREMENT,
    cust_name VARCHAR(100) NOT NULL,
    address VARCHAR(255) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL
);

-- Account Table
CREATE TABLE Account (
    account_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    cust_id INT,
    FOREIGN KEY (cust_id) REFERENCES Customer(cust_id)
);

-- Meter Table
CREATE TABLE Meter (
    meter_id INT PRIMARY KEY AUTO_INCREMENT,
    cust_id INT,
    installation_date DATE NOT NULL,
    status ENUM('Active', 'Inactive') NOT NULL,
    FOREIGN KEY (cust_id) REFERENCES Customer(cust_id)
);

-- Meter Readings Table
CREATE TABLE Meter_Readings (
    reading_id INT PRIMARY KEY AUTO_INCREMENT,
    meter_id INT,
    reading_date DATE NOT NULL,
    reading_value INT NOT NULL,
    FOREIGN KEY (meter_id) REFERENCES Meter(meter_id)
);

-- Invoice Table
CREATE TABLE Invoice (
    invoice_id INT PRIMARY KEY AUTO_INCREMENT,
    account_id INT,
    meter_id INT,
    amount_due DECIMAL(10, 2) NOT NULL,
    due_date DATE NOT NULL,
    FOREIGN KEY (account_id) REFERENCES Account(account_id),
    FOREIGN KEY (meter_id) REFERENCES Meter(meter_id)
);

-- Billing Table
CREATE TABLE Billing (
    bill_id INT PRIMARY KEY AUTO_INCREMENT,
    invoice_id INT,
    payment_due_date DATE NOT NULL,
    FOREIGN KEY (invoice_id) REFERENCES Invoice(invoice_id)
);

-- Payment Table
CREATE TABLE Payment (
    payment_id INT PRIMARY KEY AUTO_INCREMENT,
    bill_id INT,
    amount_paid DECIMAL(10, 2) NOT NULL,
    payment_date DATE NOT NULL,
    method_name VARCHAR(50) NOT NULL,
    FOREIGN KEY (bill_id) REFERENCES Billing(bill_id)
);

-- Penalty Table
CREATE TABLE Penalty (
    penalty_id INT PRIMARY KEY AUTO_INCREMENT,
    bill_id INT,
    penalty_amount DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (bill_id) REFERENCES Billing(bill_id)
);

-- Feedback Table
CREATE TABLE Feedback (
    feedback_id INT PRIMARY KEY AUTO_INCREMENT,
    cust_id INT,
    feedback_text TEXT NOT NULL,
    feedback_date DATE NOT NULL,
    FOREIGN KEY (cust_id) REFERENCES Customer(cust_id)
);

-- Notification Table
CREATE TABLE Notification (
    not_id INT PRIMARY KEY AUTO_INCREMENT,
    customer_id INT,
    message TEXT NOT NULL,
    FOREIGN KEY (customer_id) REFERENCES Customer(cust_id)
);


-- Tariff Table
CREATE TABLE Tariff (
    tariff_id INT PRIMARY KEY AUTO_INCREMENT,
    category VARCHAR(50) NOT NULL, -- e.g., Domestic, Commercial
    rate DECIMAL(10, 2) NOT NULL   -- Rate per unit
);

-- Complaint Table
CREATE TABLE Complaint (
    complaint_id INT PRIMARY KEY AUTO_INCREMENT,
    cust_id INT,
    complaint_text TEXT NOT NULL,
    complaint_date DATE NOT NULL,
    status ENUM('Pending', 'Resolved') DEFAULT 'Pending',
    FOREIGN KEY (cust_id) REFERENCES Customer(cust_id)
);

-- Usage_History Table
CREATE TABLE Usage_History (
    usage_id INT PRIMARY KEY AUTO_INCREMENT,
    cust_id INT,
    meter_id INT,
    usage_date DATE NOT NULL,
    units_consumed INT NOT NULL,
    FOREIGN KEY (cust_id) REFERENCES Customer(cust_id),
    FOREIGN KEY (meter_id) REFERENCES Meter(meter_id)
);

-- Payment_History Table
CREATE TABLE Payment_History (
    payment_history_id INT PRIMARY KEY AUTO_INCREMENT,
    cust_id INT,
    payment_id INT,
    payment_date DATE NOT NULL,
    amount_paid DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (cust_id) REFERENCES Customer(cust_id),
    FOREIGN KEY (payment_id) REFERENCES Payment(payment_id)
);
-- User_Check Table (Admin-only view)
CREATE TABLE User_Check (
    check_id INT PRIMARY KEY AUTO_INCREMENT,
    cust_id INT,
    meter_id INT,
    balance_to_pay DECIMAL(10, 2) NOT NULL,
    balance_paid DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (cust_id) REFERENCES Customer(cust_id),
    FOREIGN KEY (meter_id) REFERENCES Meter(meter_id)
);

CREATE TABLE bills (
    ->     bill_id INT AUTO_INCREMENT PRIMARY KEY,
    ->     cust_id INT NOT NULL,
    ->     amount DECIMAL(10, 2) NOT NULL,
    ->     date DATE NOT NULL,
    ->     status ENUM('Pending', 'Paid') DEFAULT 'Pending',
    ->     FOREIGN KEY (cust_id) REFERENCES customer(cust_id)
    -> );
Query OK, 0 rows affected (0.04 sec)

mysql> CREATE TABLE payments (
    ->     payment_id INT AUTO_INCREMENT PRIMARY KEY,
    ->     cust_id INT NOT NULL,
    ->     bill_id INT NOT NULL,
    ->     amount DECIMAL(10, 2) NOT NULL,
    ->     payment_date DATE NOT NULL,
    ->     FOREIGN KEY (cust_id) REFERENCES customer(cust_id),
    ->     FOREIGN KEY (bill_id) REFERENCES bills(bill_id)
    -> );
Query OK, 0 rows affected (0.02 sec)

ALTER TABLE Feedback ADD COLUMN feedback TEXT NOT NULL;

ALTER TABLE Payment DROP FOREIGN KEY payment_ibfk_1;
ALTER TABLE Penalty DROP FOREIGN KEY penalty_ibfk_1;
DROP TABLE billing;
ALTER TABLE Payment_History DROP FOREIGN KEY payment_history_ibfk_2;
DROP TABLE payment;